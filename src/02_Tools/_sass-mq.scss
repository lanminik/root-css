/* -------------------------------------------------------------------------
 * SASS-MQ
 *
 * Based on https://github.com/sass-mq/sass-mq
 * Adapted to RootCSS settings and workflow
 *
 */

// SASS-MQ variables
// --------------------------------------------------

$root-mq__breakpoints:               $breakpoints !default;
$root-mq__media-type:                all !default;

// SASS-MQ main mixin
// --------------------------------------------------

@mixin root-mq(
  $from:          false,
  $until:         false,
  $and:           false,
  $media-type:    $root-mq__media-type,
  $breakpoints:   $root-mq__breakpoints
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  // From: this breakpoint (inclusive)

  @if $from {

    @if type-of($from) == number {
      $min-width: $from;
    } @else {
      $min-width: t-sass-mq__get-breakpoint-width($from, $breakpoints);
    }
  }

  // Until: that breakpoint (exclusive)

  @if $until {

    @if type-of($until) == number {
      $max-width: $until;
    } @else {
      $max-width: t-sass-mq__get-breakpoint-width($until, $breakpoints) - 1px;
    }
  }

  // Query building

  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }

  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }

  @if $and {
    $media-query: '#{$media-query} and #{$and}';
  }

  // Remove unnecessary media query prefix 'all and '

  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: str-slice(unquote($media-query), 6);
  }

  @media #{$media-type + $media-query} {

    @content;
  }

}